import React, { useState } from "react";
import DashboardLayout from "@/components/layout/DashboardLayout";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useToast } from "@/hooks/use-toast";
import { 
  BookOpen,
  Video,
  FileText,
  Award,
  Clock,
  Users,
  TrendingUp,
  Play,
  Download,
  Star,
  CheckCircle,
  Calendar
} from "lucide-react";

export default function Training() {
  const { toast } = useToast();
  const [activeLesson, setActiveLesson] = useState(null);

  const trainingModules = [
    {
      id: 1,
      title: "ุฃุณุงุณูุงุช ุงุณุชุฎุฏุงู ุงููุธุงู",
      description: "ุชุนูู ููููุฉ ุงูุชููู ูุงุณุชุฎุฏุงู ุงูููุฒุงุช ุงูุฃุณุงุณูุฉ",
      duration: "45 ุฏูููุฉ",
      lessons: 8,
      difficulty: "ูุจุชุฏุฆ",
      progress: 100,
      topics: [
        "ุชุณุฌูู ุงูุฏุฎูู ูุงูุฎุฑูุฌ",
        "ููู ููุญุฉ ุงูุชุญูู",
        "ุฅุฏุงุฑุฉ ุงูููู ุงูุดุฎุตู",
        "ุฃุณุงุณูุงุช ุงูุชููู"
      ]
    },
    {
      id: 2,
      title: "ุฅุฏุงุฑุฉ ุงููุฑุถู",
      description: "ุฅุฏุงุฑุฉ ูููุงุช ุงููุฑุถู ูุงูุณุฌูุงุช ุงูุทุจูุฉ ุจูุนุงููุฉ",
      duration: "60 ุฏูููุฉ",
      lessons: 12,
      difficulty: "ูุชูุณุท",
      progress: 75,
      topics: [
        "ุฅุถุงูุฉ ูุฑูุถ ุฌุฏูุฏ",
        "ุชุญุฏูุซ ุงููุนูููุงุช ุงูุทุจูุฉ",
        "ุฅุฏุงุฑุฉ ุงูุณุฌูุงุช",
        "ุงูุจุญุซ ูุงูููุชุฑุฉ"
      ]
    },
    {
      id: 3,
      title: "ุฌุฏููุฉ ุงูููุงุนูุฏ",
      description: "ุชูุธูู ูุฅุฏุงุฑุฉ ููุงุนูุฏ ุงูุนูุงุฏุฉ ุจููุงุกุฉ",
      duration: "30 ุฏูููุฉ",
      lessons: 6,
      difficulty: "ูุจุชุฏุฆ",
      progress: 50,
      topics: [
        "ุฅูุดุงุก ููุนุฏ ุฌุฏูุฏ",
        "ุชุนุฏูู ูุฅูุบุงุก ุงูููุงุนูุฏ",
        "ุฅุฏุงุฑุฉ ุงูุชุฐููุฑุงุช",
        "ุนุฑุถ ุงูุชูููู"
      ]
    },
    {
      id: 4,
      title: "ุงูููุงุชูุฑ ูุงููุฏููุนุงุช",
      description: "ุฅุฏุงุฑุฉ ุงูููุงุญู ุงููุงููุฉ ูุงูููุงุชูุฑ",
      duration: "40 ุฏูููุฉ",
      lessons: 10,
      difficulty: "ูุชูุฏู",
      progress: 25,
      topics: [
        "ุฅูุดุงุก ูุงุชูุฑุฉ",
        "ุชุชุจุน ุงููุฏููุนุงุช",
        "ุงูุชูุงุฑูุฑ ุงููุงููุฉ",
        "ุฅุฏุงุฑุฉ ุงูุชุฃููู"
      ]
    }
  ];

  const quickTips = [
    {
      title: "ุงุฎุชุตุงุฑุงุช ููุญุฉ ุงูููุงุชูุญ",
      description: "Ctrl+N ูุฅุถุงูุฉ ูุฑูุถ ุฌุฏูุฏุ Ctrl+A ูููุนุฏ ุฌุฏูุฏ",
      icon: "โจ๏ธ"
    },
    {
      title: "ุญูุธ ุชููุงุฆู",
      description: "ูุชู ุญูุธ ุงูุจูุงูุงุช ุชููุงุฆูุงู ูู 30 ุซุงููุฉ",
      icon: "๐พ"
    },
    {
      title: "ุงูุจุญุซ ุงูุณุฑูุน",
      description: "ุงุณุชุฎุฏู / ููุจุญุซ ุงูุณุฑูุน ูู ุฃู ุตูุญุฉ",
      icon: "๐"
    },
    {
      title: "ุงููุณุฎ ุงูุงุญุชูุงุทู",
      description: "ูุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููููุงู ูู ุงูุณุงุนุฉ 2:00 ุตุจุงุญุงู",
      icon: "๐"
    }
  ];

  const webinars = [
    {
      title: "ุฃูุถู ุงูููุงุฑุณุงุช ูุฅุฏุงุฑุฉ ุงูุนูุงุฏุฉ",
      date: "2025-08-10 14:00",
      duration: "60 ุฏูููุฉ",
      instructor: "ุฏ. ุณุงุฑุฉ ุฃุญูุฏ",
      registered: false
    },
    {
      title: "ุงูุชูุงุฑูุฑ ูุงูุชุญูููุงุช ุงููุงููุฉ",
      date: "2025-08-15 16:00", 
      duration: "45 ุฏูููุฉ",
      instructor: "ุฃุญูุฏ ูุญูุฏ",
      registered: true
    },
    {
      title: "ุฃูุงู ุงูุจูุงูุงุช ูุงูุฎุตูุตูุฉ",
      date: "2025-08-20 10:00",
      duration: "30 ุฏูููุฉ", 
      instructor: "ู. ูุงุทูุฉ ุนูู",
      registered: false
    }
  ];

  const handleStartLesson = (moduleId: number) => {
    toast({
      title: "ุจุฏุก ุงูุฏุฑุณ",
      description: "ุณูุชู ุชูููุฑ ุงููุญุชูู ุงูุชุนูููู ูุฑูุจุงู",
    });
  };

  return (
    <DashboardLayout>
      <div className="space-y-6">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">
            ุงูุชุฏุฑูุจ ูุงูุชุนูู
          </h1>
          <p className="text-gray-600 dark:text-gray-400 mt-2">
            ุชุนูู ููููุฉ ุงุณุชุฎุฏุงู ุงููุธุงู ุจูุนุงููุฉ ูุชุทููุฑ ููุงุฑุงุชู
          </p>
        </div>

        <Tabs defaultValue="modules" className="w-full">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="modules" className="flex items-center gap-2">
              <BookOpen className="h-4 w-4" />
              ุงูุฏูุฑุงุช
            </TabsTrigger>
            <TabsTrigger value="videos" className="flex items-center gap-2">
              <Video className="h-4 w-4" />
              ุงูููุฏูููุงุช
            </TabsTrigger>
            <TabsTrigger value="webinars" className="flex items-center gap-2">
              <Users className="h-4 w-4" />
              ุงููุฏูุงุช
            </TabsTrigger>
            <TabsTrigger value="tips" className="flex items-center gap-2">
              <Award className="h-4 w-4" />
              ุงููุตุงุฆุญ
            </TabsTrigger>
          </TabsList>

          <TabsContent value="modules" className="space-y-6">
            <div className="grid gap-6 md:grid-cols-2">
              {trainingModules.map((module) => (
                <Card key={module.id} className="relative">
                  <CardHeader>
                    <div className="flex items-start justify-between">
                      <div className="space-y-1">
                        <CardTitle className="text-lg">{module.title}</CardTitle>
                        <CardDescription>{module.description}</CardDescription>
                      </div>
                      <Badge variant={
                        module.difficulty === "ูุจุชุฏุฆ" ? "default" :
                        module.difficulty === "ูุชูุณุท" ? "secondary" : "destructive"
                      }>
                        {module.difficulty}
                      </Badge>
                    </div>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between text-sm text-muted-foreground">
                      <span className="flex items-center gap-1">
                        <Clock className="h-3 w-3" />
                        {module.duration}
                      </span>
                      <span>{module.lessons} ุฏุฑุณ</span>
                    </div>
                    
                    <div className="space-y-2">
                      <div className="flex justify-between text-sm">
                        <span>ุงูุชูุฏู</span>
                        <span>{module.progress}%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-blue-600 h-2 rounded-full transition-all"
                          style={{ width: `${module.progress}%` }}
                        ></div>
                      </div>
                    </div>

                    <div className="space-y-2">
                      <h4 className="font-medium text-sm">ุงูููุงุถูุน:</h4>
                      <ul className="text-sm space-y-1">
                        {module.topics.slice(0, 3).map((topic, index) => (
                          <li key={index} className="flex items-center text-gray-600 dark:text-gray-400">
                            <CheckCircle className="w-3 h-3 text-green-500 ml-2" />
                            {topic}
                          </li>
                        ))}
                        {module.topics.length > 3 && (
                          <li className="text-xs text-muted-foreground">
                            +{module.topics.length - 3} ููุงุถูุน ุฃุฎุฑู
                          </li>
                        )}
                      </ul>
                    </div>

                    <Button 
                      className="w-full"
                      onClick={() => handleStartLesson(module.id)}
                      variant={module.progress === 100 ? "outline" : "default"}
                    >
                      <Play className="w-4 h-4 ml-2" />
                      {module.progress === 100 ? "ูุฑุงุฌุนุฉ" : "ูุชุงุจุนุฉ ุงูุชุนูู"}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="videos" className="space-y-6">
            <div className="grid gap-6 md:grid-cols-3">
              {[1, 2, 3, 4, 5, 6].map((video) => (
                <Card key={video}>
                  <CardContent className="p-0">
                    <div className="aspect-video bg-gray-200 dark:bg-gray-700 rounded-t-lg flex items-center justify-center">
                      <Play className="h-12 w-12 text-gray-500" />
                    </div>
                    <div className="p-4 space-y-2">
                      <h3 className="font-medium">ููุฏูู ุชุนูููู #{video}</h3>
                      <p className="text-sm text-muted-foreground">
                        ุดุฑุญ ููุตู ูููุฒุงุช ุงููุธุงู
                      </p>
                      <div className="flex items-center justify-between">
                        <span className="text-xs text-muted-foreground">5:30</span>
                        <Button size="sm" variant="outline" disabled>
                          ูุฑูุจุงู
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="webinars" className="space-y-6">
            <div className="space-y-4">
              {webinars.map((webinar, index) => (
                <Card key={index}>
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between">
                      <div className="space-y-1">
                        <h3 className="text-lg font-medium">{webinar.title}</h3>
                        <p className="text-sm text-muted-foreground">
                          ูุน {webinar.instructor}
                        </p>
                        <div className="flex items-center gap-4 text-sm text-muted-foreground">
                          <span className="flex items-center gap-1">
                            <Calendar className="h-3 w-3" />
                            {webinar.date}
                          </span>
                          <span className="flex items-center gap-1">
                            <Clock className="h-3 w-3" />
                            {webinar.duration}
                          </span>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        {webinar.registered && (
                          <Badge variant="default">ูุณุฌู</Badge>
                        )}
                        <Button 
                          variant={webinar.registered ? "outline" : "default"}
                          disabled
                        >
                          {webinar.registered ? "ูุณุฌู" : "ุงูุชุณุฌูู"}
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="tips" className="space-y-6">
            <div className="grid gap-4 md:grid-cols-2">
              {quickTips.map((tip, index) => (
                <Card key={index}>
                  <CardContent className="p-4">
                    <div className="flex items-start space-x-3 space-x-reverse">
                      <span className="text-2xl">{tip.icon}</span>
                      <div>
                        <h3 className="font-medium">{tip.title}</h3>
                        <p className="text-sm text-muted-foreground mt-1">
                          {tip.description}
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            <Card>
              <CardHeader>
                <CardTitle>ูุฑูุฒ ุงููุณุงุนุฏุฉ</CardTitle>
                <CardDescription>
                  ููุงุฑุฏ ุฅุถุงููุฉ ูููุณุงุนุฏุฉ ูุงูุฏุนู
                </CardDescription>
              </CardHeader>
              <CardContent className="grid gap-3 md:grid-cols-3">
                <Button variant="outline" className="flex items-center gap-2 h-12">
                  <FileText className="h-4 w-4" />
                  ุฏููู ุงููุณุชุฎุฏู
                </Button>
                <Button variant="outline" className="flex items-center gap-2 h-12">
                  <Download className="h-4 w-4" />
                  ุชุญููู ุงูุฃุฏูุฉ
                </Button>
                <Button variant="outline" className="flex items-center gap-2 h-12">
                  <Star className="h-4 w-4" />
                  ุงูุชูููู ูุงููุฑุงุฌุนุฉ
                </Button>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Progress Overview */}
        <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-950/20 dark:to-indigo-950/20">
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                  ๐ ุชูุฏูู ุงูุชุนูููู
                </h3>
                <p className="text-gray-600 dark:text-gray-400">
                  ุฃูููุช 62% ูู ุงููุญุชูู ุงูุชุนูููู ุงููุชุงุญ
                </p>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold text-blue-600">62%</div>
                <p className="text-sm text-muted-foreground">ููุชูู</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </DashboardLayout>
  );
}